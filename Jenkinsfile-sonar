pipeline {
    agent any

    environment {
        SONARQUBE_SERVER = "Sonar"  // Name configured in Jenkins
    }

    stages {
        stage('Checkout Code') {
            steps {
                git credentialsId: 'github', url: 'https://github.com/manju9676/javaApp.git'
            }   
        }

        stage('Build') {
            steps {
                sh 'mvn clean package'  // Modify for your project type
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv(SONARQUBE_SERVER) {
                    sh '''
                        mvn sonar:sonar \
                            -Dsonar.projectKey=demo \
                            -Dsonar.host.url=http://http://18.222.219.116:9000 \
                            -Dsonar.login=credintials('sonar-key')
                    '''
                }
            }
        }

        stage('Quality Gate') {
            steps {
                script {
                    timeout(time: 5, unit: 'MINUTES') {
                        def qualityGate = waitForQualityGate()
                        if (qualityGate.status != 'OK') {
                            error "Quality Gate failed: ${qualityGate.status}"
                        }
                    }
                }
            }
        }
    }
}